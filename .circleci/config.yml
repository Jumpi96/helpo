version: 2
jobs:
  build-and-test-api:
    working_directory: ~/Jumpi96/helpo
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      PIPENV_IGNORE_VIRTUALENVS: true
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - run:
        working_directory: ~/Jumpi96/helpo
        command: pyenv install --skip-existing 3.6.0 && pyenv rehash && pip install virtualenv && pip install nose && pip install pep8 && pyenv rehash
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        - v1-dep-master-
        - v1-dep-
    - run: curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
    - run: sudo apt-get install git-lfs --upgrade
    - run: pip install requests pipenv --upgrade
    - run: cd helpo-api && pipenv install --dev
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        # This is a broad list of cache paths to include many possible development environments
        # You can probably delete some of these entries
        - vendor/bundle
        - ~/virtualenvs
        - ~/.m2
        - ~/.ivy2
        - ~/.bundle
        - ~/.go_workspace
        - ~/.gradle
        - ~/.cache/bower
    # Test
    - run: cd helpo-api DJANGO_SETTINGS_MODULE=helpo.settings.test pipenv run python manage.py has_missing_migrations --ignore authtools;
    - run: cd helpo-api DJANGO_SETTINGS_MODULE=helpo.settings.production SECRET_KEY=$(python -c 'import uuid; print(uuid.uuid4().hex + uuid.uuid4().hex)') DATABASE_URL='sqlite:///' ALLOWED_HOSTS='.example.org' SENDGRID_USERNAME='test' SENDGRID_PASSWORD='test' REDIS_URL='redis://' pipenv run python manage.py check --deploy
    - run: cd helpo-api && pipenv run coverage run manage.py test
    - run: cd helpo-api && pipenv run coverage html -d $CIRCLE_ARTIFACTS
    - run: bash <(curl -s https://codecov.io/bash)
    # Teardown
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
  build-and-test-web:
    working_directory: ~/Jumpi96/helpo
    parallelism: 3
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      PIPENV_IGNORE_VIRTUALENVS: true
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - run:
        working_directory: ~/Jumpi96/helpo
        command: nvm install 6.1.0 && nvm alias default 6.1.0
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        - v1-dep-master-
        - v1-dep-
    - run: curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
    - run: sudo apt-get install git-lfs --upgrade
    - run: cd helpo-web && npm install
    - run: cd helpo-mobile && npm install
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        # This is a broad list of cache paths to include many possible development environments
        # You can probably delete some of these entries
        - vendor/bundle
        - ~/virtualenvs
        - ~/.m2
        - ~/.ivy2
        - ~/.bundle
        - ~/.go_workspace
        - ~/.gradle
        - ~/.cache/bower
    # Test
    - run: cd helpo-web && npm run build
    - run: cd helpo-web && npm test
    - run:
        command: cd helpo-mobile && npm test -- --runInBand --updateSnapshot
        no_output_timeout: 1500s
    # Teardown
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test-api
      - build-and-test-web